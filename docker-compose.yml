version: '3.8'

volumes:
  postgres_data:
  img:

networks:
  app-network:

services:
  app:
    build:
      context: .
      dockerfile: OfficeTechRepairSystem/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - img:/app/wwwroot/static/SpecializationImageStorage
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__OfficeTechRepairSystemDb=Username=postgres;Password=postgres;Host=postgre;Port=5432;Database=OfficeTechRepairSystemDb;Pooling=true
    networks:
      - app-network

  db:
    image: postgres:16.1-alpine
    ports:
      - "5433:5432"
    container_name: postgre
    environment:
      POSTGRES_DB: OfficeTechRepairSystemDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -d OfficeTechRepairSystemDb -c 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network